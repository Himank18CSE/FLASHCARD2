:root {
    --primary: #6366f1;
    --success: #22c55e;
    --danger: #ef4444;
    --radius: 1rem;
}

@keyframes gradient-light {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

@keyframes gradient-dark {
    0% {
        background-position: 50% 0%;
    }
    50% {
        background-position: 50% 100%;
    }
    100% {
        background-position: 50% 0%;
    }
}

.light-mode {
    --bg-primary: #f8fafc;
    --bg-secondary: #ffffff;
    --text-primary: #1e293b;
    --text-secondary: #475569;
    --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
    --gradient-1: #fdf2f8;
    --gradient-2: #ede9fe;
    --gradient-3: #e0f2fe;
    --gradient-4: #f0fdf4;
}

.dark-mode {
    --bg-primary: #0f172a;
    --bg-secondary: #1e293b;
    --text-primary: #f1f5f9;
    --text-secondary: #cbd5e1;
    --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -2px rgba(0, 0, 0, 0.3);
    --gradient-1: #312e81;
    --gradient-2: #3b0764;
    --gradient-3: #1e3a8a;
    --gradient-4: #064e3b;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', sans-serif;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(
        -45deg,
        var(--gradient-1),
        var(--gradient-2),
        var(--gradient-3),
        var(--gradient-4)
    );
    background-size: 400% 400%;
    color: var(--text-primary);
    transition: color 0.3s ease;
    animation: gradient-light 15s ease infinite;
}

.dark-mode body {
    animation: gradient-dark 15s ease infinite;
}

/* Add a subtle overlay pattern */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='currentColor' fill-opacity='0.03' fill-rule='evenodd'/%3E%3C/svg%3E");
    pointer-events: none;
}

.container {
    text-align: center;
    padding: 2rem;
    max-width: 600px;
    width: 100%;
    position: relative;
    z-index: 1;
}

.theme-toggle {
    position: fixed;
    top: 1rem;
    right: 1rem;
}

#theme-switch {
    background: none;
    border: none;
    color: var(--text-primary);
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

#theme-switch:hover {
    background: rgba(0, 0, 0, 0.1);
}

.dark-mode #theme-switch .sun {
    display: block;
}

.dark-mode #theme-switch .moon {
    display: none;
}

.light-mode #theme-switch .sun {
    display: none;
}

.light-mode #theme-switch .moon {
    display: block;
}

.flashcard {
    perspective: 2000px;
    margin-bottom: 2rem;
}

.card {
    width: 100%;
    max-width: 400px;
    height: 250px;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    margin: 0 auto;
}

.card.flipped {
    transform: rotateY(180deg);
}

.card-front,
.card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 2rem;
    border-radius: var(--radius);
    background: var(--bg-secondary);
    box-shadow: var(--shadow);
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.card-back {
    transform: rotateY(180deg);
}

h2 {
    color: var(--text-primary);
    margin-bottom: 1rem;
    font-weight: 600;
    font-size: 1.5rem;
}

p {
    color: var(--text-secondary);
    font-size: 1.125rem;
    line-height: 1.6;
    max-width: 100%;
    word-wrap: break-word;
}

.controls {
    margin-top: 2rem;
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
    padding: 0.5rem;
}

.btn {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 0.5rem;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    transition: all 0.2s ease;
    background: var(--bg-secondary);
    color: var(--text-primary);
    box-shadow: var(--shadow);
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.light-mode .btn {
    background: white;
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.dark-mode .btn {
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.light-mode .btn:hover {
    background: #f8fafc;
}

.dark-mode .btn:hover {
    background: rgba(255, 255, 255, 0.2);
}

.btn:active {
    transform: translateY(0);
}

.btn.success {
    background: var(--success);
    color: white;
    border: none;
}

.btn.danger {
    background: var(--danger);
    color: white;
    border: none;
}

.stats {
    margin-top: 2rem;
    display: flex;
    gap: 2rem;
    justify-content: center;
}

.stats p {
    color: var(--text-secondary);
    font-size: 1rem;
}

#known-count,
#learning-count {
    font-weight: 600;
    display: inline-block;
    min-width: 1.5rem;
    padding: 0.2rem 0.5rem;
    background: var(--bg-secondary);
    border-radius: 0.375rem;
    margin-left: 0.5rem;
    color: var(--text-primary);
}

.light-mode #known-count,
.light-mode #learning-count {
    background: white;
    color: #1a202c;
    border: 1px solid rgba(0, 0, 0, 0.1);
}

/* Add hover effect to cards */
.card:hover {
    transform: translateY(-5px);
    transition: transform 0.3s ease;
}

.light-mode .card:hover {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.dark-mode .card:hover {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
}

.card.flipped:hover {
    transform: translateY(-5px) rotateY(180deg);
}

/* Add these rules after your existing CSS */

.progress-container {
    margin-bottom: 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
}

.circular-progress {
    position: relative;
    width: 120px;
    height: 120px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.progress-ring-circle-bg {
    fill: none;
    stroke: rgba(0, 0, 0, 0.1);
    stroke-width: 8;
}

.progress-ring-circle {
    fill: none;
    stroke: var(--primary);
    stroke-width: 8;
    stroke-linecap: round;
    transform: rotate(-90deg);
    transform-origin: 50% 50%;
    transition: stroke-dashoffset 0.5s ease;
}

.dark-mode .progress-ring-circle-bg {
    stroke: rgba(255, 255, 255, 0.05);
}

.progress-text {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
}

#progress-percentage {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-primary);
}

.progress-label {
    font-size: 0.875rem;
    color: var(--text-secondary);
    margin-top: 0.25rem;
}

.progress-stats {
    display: flex;
    gap: 2rem;
    justify-content: center;
    padding: 1rem;
    background: var(--bg-secondary);
    border-radius: var(--radius);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.light-mode .progress-stats {
    background: white;
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.stat-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
}

.stat-item span:first-child {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary);
}

.stat-label {
    font-size: 0.875rem;
    color: var(--text-secondary);
}

.light-mode .stat-label {
    color: #4a5568;
}

/* Animation for progress updates */
@keyframes progress-ping {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    75%, 100% {
        transform: scale(1.1);
        opacity: 0;
    }
}

.progress-ring-circle.updated {
    animation: progress-ping 0.5s cubic-bezier(0, 0, 0.2, 1);
}

/* Add these rules after your existing CSS */

.quote-container {
    margin-top: 2rem;
    padding: 2rem;
    background: var(--bg-secondary);
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
    opacity: 1;
    transform: translateY(0);
}

.quote-container.hidden {
    opacity: 0;
    transform: translateY(20px);
    pointer-events: none;
}

.quote-content {
    text-align: center;
    margin-bottom: 1.5rem;
}

.quote-icon {
    color: var(--primary);
    margin-bottom: 1rem;
    opacity: 0.6;
}

.quote-text {
    font-size: 1.25rem;
    color: var(--text-primary);
    line-height: 1.6;
    margin-bottom: 1rem;
    font-style: italic;
}

.quote-author {
    color: var(--text-secondary);
    font-size: 1rem;
    font-weight: 500;
}

/* Quote appear animation */
@keyframes quoteAppear {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.quote-container:not(.hidden) {
    animation: quoteAppear 0.5s ease forwards;
}

/* Add these rules after your existing CSS */

.level-container {
    position: fixed;
    top: 1rem;
    left: 1rem;
    z-index: 100;
}

.level-info {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.5rem;
    background: var(--bg-secondary);
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
}

.level-badge {
    width: 2.5rem;
    height: 2.5rem;
    background: var(--primary);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    font-size: 1.25rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.xp-info {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.xp-bar-container {
    width: 150px;
    height: 0.5rem;
    background: rgba(0, 0, 0, 0.1);
    border-radius: 1rem;
    overflow: hidden;
}

.xp-bar {
    height: 100%;
    background: var(--primary);
    border-radius: 1rem;
    transition: width 0.3s ease;
    width: 0%;
}

.xp-text {
    font-size: 0.875rem;
    color: var(--text-secondary);
}

/* Rewards Panel */
.rewards-panel {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--bg-secondary);
    padding: 2rem;
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    text-align: center;
    z-index: 1000;
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
}

.rewards-panel.hidden {
    opacity: 0;
    visibility: hidden;
    transform: translate(-50%, -40%);
}

.level-up-badge {
    width: 5rem;
    height: 5rem;
    background: var(--primary);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    font-size: 2.5rem;
    margin: 1rem auto;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    animation: levelUpPulse 2s infinite;
}

@keyframes levelUpPulse {
    0% {
        transform: scale(1);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }
    50% {
        transform: scale(1.05);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    }
    100% {
        transform: scale(1);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }
}

.reward-content {
    margin: 2rem 0;
}

.unlocked-reward {
    margin-top: 1.5rem;
}

.reward-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: var(--radius);
    margin-top: 0.5rem;
}

.reward-icon {
    width: 2.5rem;
    height: 2.5rem;
    background: var(--primary);
    border-radius: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Theme Selector */
.theme-selector {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    z-index: 100;
}

.theme-menu {
    position: absolute;
    bottom: 100%;
    right: 0;
    margin-bottom: 0.5rem;
    background: var(--bg-secondary);
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    padding: 0.5rem;
    transition: all 0.3s ease;
}

.theme-menu.hidden {
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
}

.theme-list {
    display: grid;
    gap: 0.5rem;
    min-width: 200px;
}

.theme-option {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    border-radius: 0.375rem;
    cursor: pointer;
    transition: all 0.2s ease;
}

.theme-option:hover {
    background: rgba(255, 255, 255, 0.1);
}

.theme-option.locked {
    opacity: 0.5;
    cursor: not-allowed;
}

.theme-color-preview {
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 0.25rem;
    border: 2px solid rgba(255, 255, 255, 0.1);
}

/* Audio Controls */
.audio-controls {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
    padding: 1rem;
    background: var(--bg-secondary);
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

#toggle-music {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

#toggle-music svg {
    width: 1.25rem;
    height: 1.25rem;
}

#music-select {
    background: var(--bg-primary);
    color: var(--text-primary);
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    cursor: pointer;
    font-size: 0.875rem;
}

#volume-slider {
    flex: 1;
    max-width: 150px;
    height: 4px;
    -webkit-appearance: none;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 2px;
    outline: none;
}

#volume-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 16px;
    height: 16px;
    background: var(--primary);
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.2s ease;
}

#volume-slider::-moz-range-thumb {
    width: 16px;
    height: 16px;
    background: var(--primary);
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.2s ease;
    border: none;
}

#volume-slider::-webkit-slider-thumb:hover {
    transform: scale(1.1);
}

#volume-slider::-moz-range-thumb:hover {
    transform: scale(1.1);
}

/* Dark mode adjustments for audio controls */
.dark-mode #music-select {
    background: var(--bg-secondary);
}

.dark-mode #volume-slider {
    background: rgba(255, 255, 255, 0.05);
}

/* Update text colors for better contrast */
.light-mode h2 {
    color: #1a202c;
}

.light-mode p {
    color: #4a5568;
}

/* Add subtle hover effects for cards */
.card:hover {
    transform: translateY(-5px);
    transition: transform 0.3s ease;
}

.light-mode .card:hover {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.dark-mode .card:hover {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
}

.card.flipped:hover {
    transform: translateY(-5px) rotateY(180deg);
}

/* Update controls spacing */
.controls {
    margin-top: 2rem;
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
    padding: 0.5rem;
}

/* Add transition for button visibility */
.btn {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.2s ease, background-color 0.2s ease;
}

.btn[style*="display: none"] {
    opacity: 0;
    visibility: hidden;
}

/* Minigames Styles */
.minigames-menu {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--bg-secondary);
    padding: 2rem;
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    z-index: 1000;
    transition: all 0.3s ease;
    max-width: 90%;
    width: 600px;
}

.minigames-menu.hidden {
    opacity: 0;
    visibility: hidden;
    transform: translate(-50%, -40%);
}

.minigames-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-top: 1.5rem;
}

.minigame-card {
    background: var(--bg-primary);
    padding: 1.5rem;
    border-radius: var(--radius);
    text-align: center;
    transition: transform 0.2s ease;
}

.minigame-card:hover {
    transform: translateY(-5px);
}

.minigame-card h3 {
    margin-bottom: 0.5rem;
    color: var(--text-primary);
}

.minigame-card p {
    margin-bottom: 1rem;
    color: var(--text-secondary);
}

#toggle-minigames {
    position: fixed;
    bottom: 1rem;
    left: 1rem;
    z-index: 100;
}

/* Memory Game Styles */
.memory-game {
    padding: 2rem;
    max-width: 1000px;
    margin: 0 auto;
}

.memory-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1rem;
    margin: 2rem 0;
}

.memory-card {
    aspect-ratio: 2/3;
    perspective: 1000px;
    cursor: pointer;
}

.memory-card .card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transition: transform 0.6s;
}

.memory-card.flipped .card-inner {
    transform: rotateY(180deg);
}

.memory-card .card-front,
.memory-card .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    text-align: center;
    background: var(--bg-secondary);
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    font-size: 1.25rem;
    border: 2px solid transparent;
}

.memory-card .card-back {
    transform: rotateY(180deg);
    font-size: 0.9rem;
}

.memory-card.matched .card-front,
.memory-card.matched .card-back {
    border-color: var(--success);
    background: var(--success);
    color: white;
}

/* Quiz Game Styles */
.quiz-game {
    padding: 2rem;
    max-width: 800px;
    margin: 0 auto;
}

.quiz-content {
    margin: 2rem 0;
}

.quiz-question {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    color: var(--text-primary);
}

.quiz-options {
    display: grid;
    gap: 1rem;
}

.quiz-option {
    width: 100%;
    padding: 1rem;
    text-align: left;
    transition: all 0.3s ease;
}

.quiz-option:hover:not(:disabled) {
    transform: translateX(10px);
}

.quiz-option.correct {
    background: var(--success);
    color: white;
}

.quiz-option.wrong {
    background: var(--danger);
    color: white;
}

.quiz-option:disabled {
    cursor: not-allowed;
    opacity: 0.7;
}

/* Game Header Styles */
.game-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
}

.game-stats {
    display: flex;
    gap: 1rem;
    font-size: 1.1rem;
    color: var(--text-secondary);
}

/* Exit Button Styles */
#exit-game {
    margin-top: 2rem;
    background: var(--danger);
    color: white;
}

/* Dark Mode Adjustments */
.dark-mode .minigame-card {
    background: rgba(255, 255, 255, 0.05);
}

.dark-mode .memory-card .card-front,
.dark-mode .memory-card .card-back {
    background: var(--bg-secondary);
    border: 1px solid rgba(255, 255, 255, 0.1);
} 